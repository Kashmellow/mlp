// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mlp;

namespace mlp.Migrations
{
    [DbContext(typeof(MlpContext))]
    [Migration("20200220181058_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("mlp.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTimeGroup")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Category = "Leader",
                            DateTimeGroup = new DateTime(2020, 2, 20, 13, 10, 57, 611, DateTimeKind.Local).AddTicks(6458),
                            Description = "I am a strong Pony! Haaaaay!",
                            Image = "rainbowdash.png",
                            Name = "Rainbow Dash",
                            ReviewDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProductId = 2,
                            Category = "Pony",
                            DateTimeGroup = new DateTime(2020, 2, 20, 13, 10, 57, 614, DateTimeKind.Local).AddTicks(7615),
                            Description = "I am a shy Pony... hello!",
                            Image = "fluttershy.png",
                            Name = "Fluttershy",
                            ReviewDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProductId = 3,
                            Category = "Pony",
                            DateTimeGroup = new DateTime(2020, 2, 20, 13, 10, 57, 614, DateTimeKind.Local).AddTicks(7686),
                            Description = "I am a fun Pony!!!",
                            Image = "pinkypie.png",
                            Name = "Pinkie Pie",
                            ReviewDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProductId = 4,
                            Category = "Pony",
                            DateTimeGroup = new DateTime(2020, 2, 20, 13, 10, 57, 614, DateTimeKind.Local).AddTicks(7693),
                            Description = "I am yet another pony, heya!",
                            Image = "twilightsparkle.png",
                            Name = "Twilight Sparkle",
                            ReviewDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("mlp.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<string>("ReviewerName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReviewId");

                    b.HasIndex("ProductId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            ReviewId = 1,
                            Content = "I love this pony!!",
                            ProductId = 1,
                            Rating = 5.0,
                            ReviewerName = "Carl"
                        },
                        new
                        {
                            ReviewId = 2,
                            Content = "I love to feed my pony!!",
                            ProductId = 2,
                            Rating = 5.0,
                            ReviewerName = "Amelia"
                        },
                        new
                        {
                            ReviewId = 3,
                            Content = "I love to ride my pony!!",
                            ProductId = 3,
                            Rating = 5.0,
                            ReviewerName = "Colleen"
                        },
                        new
                        {
                            ReviewId = 4,
                            Content = "I wish I had this pony!!",
                            ProductId = 4,
                            Rating = 5.0,
                            ReviewerName = "Tim"
                        });
                });

            modelBuilder.Entity("mlp.Models.Review", b =>
                {
                    b.HasOne("mlp.Models.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
